@model Tracker.ViewModels.TrackConsignmentViewModel
@{
    ViewBag.Title = "TrackConsignment";
    var trackingDetails = Json.Encode(Model.TrackingLocations);
}

<input type="hidden" id="hfTrackingDetails" value='@Html.Raw(trackingDetails)' />

@*<h3>Consignment Tracking Number: @Html.TextBoxFor(m => m.TrackingId) </h3>*@


<form action="/Home/TrackConsignment" method="get">
    <label for="TrackingId" style="display:inline-block">Consignment Tracking Number</label>
    <input type="text" name="TrackingId" value="@Model.TrackingId" /> <button id="btnSearch" style="height:2.2em;"></button>
</form>


<table class="grid-style">
    <caption>Locations List</caption>
    <thead>
        <tr>
            <th>Location</th>
            <th>Time</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td width="80%" rowspan="@(Model.TrackingLocations.Count + 1)">
                <div id="map_canvas" style="width: 100%; height: 600px"></div>
            </td>
        </tr>
        @foreach (var item in Model.TrackingLocations)
        {
            <tr>
                <td width="20%">
                    @item.TrackingDateTime
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts{
    <style type="text/css">
        .map {
            width: 305px;
            height: 305px;
            border: 5px solid gray;
            border-radius: 10px;
        }
    </style>
    @Styles.Render("~/Content/css/NavigatorPulsate")
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script type="text/javascript">
        $(function () {
            $("#btnSearch").button({
                icons: {
                    primary: "ui-icon-search"
                },
                text: false
            });
        });



        function initialize() {
            var mapOptions = {
                zoom: 3,
                center: new google.maps.LatLng(32.71533, -117.15726),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            // Creating a LatLngBounds object
            var bounds = new google.maps.LatLngBounds();
            var map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
            var data = $.parseJSON($('#hfTrackingDetails').val());
            var TrackingCoordinates = [];
            $.each(data, function (key, item) {
                TrackingCoordinates.push(new google.maps.LatLng(item["Locations"]["Latitude"], item["Locations"]["Longitude"]));
            });
            var TrackingPath = new google.maps.Polyline({
                path: TrackingCoordinates,
                geodesic: true,
                strokeColor: '#3a79c8',
                strokeOpacity: 1.0,
                strokeWeight: 2
            });
            TrackingPath.setMap(map);

            // Adding the markers
            for (var i = 0; i < TrackingCoordinates.length - 1 ; i++) {
                // build entire marker first time thru
                var marker = new google.maps.Marker({
                    position: TrackingCoordinates[i],
                    map: map,
                    //title: TrackSequences[i]
                });
                bounds.extend(TrackingCoordinates[i]);
            }
            //Remove last location from array to show it as current location with navigator
            var LastLocation = TrackingCoordinates.pop();
            MarkLastLocation(LastLocation, map);
            // Extending the bounds object with each LatLng
            bounds.extend(LastLocation);
            // Adjusting the map to new bounding box
            map.fitBounds(bounds);
        }

        function MarkLastLocation(LastLocation, map) {
            // define our custom marker image
            var image = new google.maps.MarkerImage(
                'http://plebeosaur.us/etc/map/bluedot_retina.png',
                null, // size
                null, // origin
                new google.maps.Point(8, 8), // anchor (move to center of marker)
                new google.maps.Size(17, 17) // scaled size (required for Retina display icon)
            );
            // then create the new marker
            myMarker = new google.maps.Marker({
                flat: true,
                icon: image,
                map: map,
                optimized: false,
                position: LastLocation,
                title: 'I might be here',
                visible: true
            });

            // Adding the markers
            myMarker.setPosition(LastLocation);
        }
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
}